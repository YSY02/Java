import java.util.Scanner;

/**
 * 标题：空格替换
 * 请编写一个方法，将字符串中的空格全部替换为“%20”。
 * 假定该字符串有足够的空间存放新增的字符，并且知 道字符串的真实长度(小于等于1000)，
 * 同时保证字符串由大小写的英文字母组成。
 * 给定一个string iniString 为原始的串，以及串的长度 int len, 返回替换后的string。
 */
public class Replacement {
    //思路一：我们可以使用StringBuilder，当碰到空格，我们就直接追加一个%20。
    // 将字符串中的所有空格替换成%20
    public static String replaceSpace1(String iniString,int length){
        // 如果允许分配额外空间
        if (iniString == null || iniString.length() <= 0) {
            return iniString;
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < length; i++) {
            char c = iniString.charAt(i);
            if (c == ' ')
                sb.append("%20");
            else
                sb.append(c);
        }
        return sb.toString();
    }

    //思路二：遍历原有的字符串，计算出新的添加了%20的数组的长度。计算方式：字符个数+空格数+空格数乘以2。
    //把原来的字符全部拷贝到新的数组ch2当中，然后我们从后往前去遍历ch2,不是空格，向后拷贝。遇到空格手动添加%20
    public static String replaceSpace(String iniString, int length) {
        //字符串生成字符数组
        char[] ch = iniString.toCharArray();
        if(iniString == null || length <= 0) {
            return null;
        }
        int mLen = 0;//计算字符的个数
        int numBlank = 0;//计算空格的数组
        int i = 0;//从0号下标开始遍历
        while(i < ch.length) {
            ++mLen;
            if(ch[i] == ' ') {
                ++numBlank;
            }
            ++i;
        }
        //替换为%20之后，新数组的长度。
        int newlen = mLen + numBlank * 2;//a%20b%20c%20d a b c d
        // 新的数组
        char []ch2 = new char[newlen];
        //先把ch里面的内容，全部拷贝到ch2,我们要在ch2里面进行操作。
        System.arraycopy(ch,0,ch2,0,length);
        int indexofMLen = mLen-1;//也必须减一
        int indexofnew = newlen-1;//不减一就越界了
        while(indexofnew > indexofMLen && indexofMLen >= 0) {
            if(ch2[indexofMLen] == ' ') {
                ch2[indexofnew--] = '0';
                ch2[indexofnew--] = '2';
                ch2[indexofnew--] = '%';
            }else {
                ch2[indexofnew] = ch2[indexofMLen];
                indexofnew--;
            }
            --indexofMLen;
        }
        return String.copyValueOf(ch2);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            String str = sc.nextLine();
            String result = replaceSpace(str, str.length());
            System.out.println(result);
        }
    }
}
