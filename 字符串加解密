import java.util.*;

public class Main2 {
    // 对字符进行加密，加密原理：英文字母用后一个字符替换，变换大小写
    // 如果是数字则加1就好了，
    // 如果是小写z,那么对应大写A,大写Z对象小写a。
    public static char charEncryption(char c){
        if(c >= 'a' && c < 'z')
            return (char)(c + 1 - 32);//A->65  a->97
        else if(c == 'z')
            return 'A';
        else if(c >= 'A' && c < 'Z')
            return (char)(c + 1 + 32);
        else if(c == 'Z')
            return 'a';
        else if(c >= '0' && c < '9')
            return (char)(c + 1);
        else if(c == '9')
            return '0';
        else//类似于加减号特殊字符
            return c;
    }

    //单字符解密过程
    public static char charDecryption(char c){
        if(c > 'a' && c <= 'z')
            return (char)(c - 1 - 32);
        else if(c == 'a')
            return 'Z';
        else if(c > 'A' && c <= 'Z')
            return (char)(c - 1 + 32);
        else if(c == 'A')
            return 'z';
        else if(c > '0' && c <= '9')
            return (char)(c - 1);
        else if(c == '0')
            return '9';
        else
            return c;
    }

    //加密，对输入的字符串中的每个字符加密加密
    public static String encryption(String s){
        char[] cs = s.toCharArray();
        StringBuffer sb = new StringBuffer();
        for(int i = 0; i < cs.length; i++){
            sb.append(charEncryption(cs[i]));
        }
        return sb.toString();
    }

    //解密
    public static String decryption(String s){
        char[] cs = s.toCharArray();
        StringBuffer sb = new StringBuffer();
        for(int i = 0; i < cs.length; i++){
            sb.append(charDecryption(cs[i]));
        }
        return sb.toString();
    }

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.print("代加密字符串：");
        while(sc.hasNext()){
            String s1 = sc.nextLine();//代加密字符串
            System.out.print("待解密字符串：");
            String s2 = sc.nextLine();//待解密字符串
            System.out.print("加密后字符串：");
            System.out.println(encryption(s1));
            System.out.print("解密后字符串：");
            System.out.println(decryption(s2));
        }
        sc.close();
    }
}
