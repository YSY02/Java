import java.util.Scanner;

public class RMB {
    static String [] map = {"壹","贰", "叁", "肆", "伍","陆", "柒", "捌","玖"};

    public static void resolve(String str) {
        String[] strArr = str.split("\\.");
        //整数部分
        int number = Integer.valueOf(str.split("\\.")[0]);
        StringBuffer res = new StringBuffer("人民币");
        int yi = (int) number / 100_000_000;//亿
        if (yi != 0) {
            res.append(resolveQian(yi)).append("亿");
            number = number - yi * 100_000_000;
        }
        int wan = (int) (number / 10000);
        if (wan != 0) {
            res.append(resolveQian(wan)).append("万");
            number = number - wan * 10000;
        }

        //处理千百十个位
        String beforePointString=resolveQian(number);
        if(beforePointString.length()>1){
            res.append(beforePointString).append("元");
        }

        //如果有小数点部分，处理小数点后面位数
        //小数部分处理
        if (strArr.length>1) {       //长度为1 ，刚好是整数占数组的一个下标
            String afterPointString=strArr[1];
            res.append(handleNumberAferPoint(afterPointString));
        }

        //???? 在resolveQian()  可能返回0xxx
        //最高位不能有0
        String resString=res.toString();
        //?????????
        if (resString.length() > 4 && resString.charAt(3) == '零'&& resString.charAt(4) != '元') {
            resString=resString.substring(0,3)+
                    resString.substring(4);//返回一个字符串，该字符串是此字符串的子字符串
        }
        System.out.println(resString);
    }

    //处理小数点后面的数
    private static String handleNumberAferPoint(String str) {
        String res="";
        if(str.equals("00")||str.equals("0")){
            res="整";
        }else {
            if(str.charAt(0)!='0'){
                res+=map[Integer.valueOf(str.charAt(0)+"")-1]+"角";
            }

            if(str.length()>1&&str.charAt(1)!='0'){
                res+=map[Integer.valueOf(str.charAt(1)+"")-1]+"分";
            }
        }
        return res;
    }


    //处理四位数 千百十个位
    public static String resolveQian(double temp){
        StringBuffer resBuffer=new StringBuffer();
        //千位
        int qian=(int)(temp/1000);
        if(qian!=0){
            resBuffer.append(map[qian-1]).append("仟");//????因为传进来的数就是四位
            temp=temp-qian*1000;
        }
        //百位
        int bai= (int) (temp/100);
        if(bai!=0){
            resBuffer.append(map[bai-1]).append("佰");
            temp=temp-bai*100;
        }
        //!!!0 只添加在百位和十位
        if(qian!=0&&bai==0){
            resBuffer.append("零");
        }
        //十位
        int shi=(int)(temp/10);
        if(shi!=0) {
            //注意一哈，忘记壹拾的处理
            if (shi != 1) {
                resBuffer.append(map[shi-1]);
            }
            resBuffer.append("拾");
            temp=temp-shi*10;
        }
        // !!!注意0
        if(bai!=0&&shi==0){
            resBuffer.append("零");
        }
        //个位
        int ge=(int)(temp%10);
        if(ge!=0){
            //例如50001 ，读伍万零壹
            if(qian==0&&bai==0&&shi==0){
                resBuffer.append("零");
            }
            resBuffer.append(map[ge-1]);
        }
        String res=resBuffer.toString();
        return res;
    }


    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        while (scanner.hasNext()){
            String number=scanner.next();
            resolve(number);
        }
        scanner.close();
    }
}


