import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;

/**
 * 【题目解析】：
 * 注意! 题目中的净文件名指: 如果一个文件路径为 c:\test\test.c 那么净文件名就是 test.c
 * 【解题思路】：
 * 实现过程比较简单, 按照题目需求操作即可.
 * 记录个数，故使用Map，不需要排序故使用HashMap，根据题意是要循环输出，而且提交一次会有测试用例提示，
 * 需要按照输入顺序输出，故使用LinkedHashMap 。在输出的时候，题目的意思是循环八个，但问题是
 * 必须记录全部错误个数，否则刚记录完后弹出了，错误数就对不上了，跟操作系统里的缺页有那么点相似
 */

public class Main8{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        Map<String,Integer> map=new LinkedHashMap<>();
        while (sc.hasNext()){
            String str=sc.next();
            int linenum=sc.nextInt();
            String[] arr=str.split("\\\\");  //根据\切割
            String s=arr[arr.length-1];
            if(s.length()>16)  //截取
                s=s.substring(s.length()-16);
            String key=s+" "+linenum;//净文件名 行数
            int value=1;//该文件名出现次数置为1
            if(map.containsKey(key)) {//如果已经存在相同文件
                //put(K key,V value),设置key对应的value
                map.put(key, map.get(key) + 1);//value+1
            } else {
                map.put(key, value);//将新文件名加入map中
            }
        }

        //记录文件出现次数
        int count=0;
        //遍历不重复的文件名
        for(String string:map.keySet()){
            count++;
            //如果不重复文件个数大于8
            if(count>(map.keySet().size()-8)) //输出最后八个记录
                System.out.println(string+" "+map.get(string));
        }
    }
}
